// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;
using SIDCOP_Backend.Entities.Entities;

namespace SIDCOP_Backend.DataAccess.Context;

public partial class BDD_SIDCOPContext : DbContext
{
    public BDD_SIDCOPContext(DbContextOptions<BDD_SIDCOPContext> options)
        : base(options)
    {
    }

    public BDD_SIDCOPContext()
    { 
    }

    public virtual DbSet<tbAcciones> tbAcciones { get; set; }

    public virtual DbSet<tbBodegas> tbBodegas { get; set; }

    public virtual DbSet<tbCAIs> tbCAIs { get; set; }

    public virtual DbSet<tbCanales> tbCanales { get; set; }

    public virtual DbSet<tbCargos> tbCargos { get; set; }

    public virtual DbSet<tbCategorias> tbCategorias { get; set; }

    public virtual DbSet<tbClientes> tbClientes { get; set; }

    public virtual DbSet<tbColonias> tbColonias { get; set; }

    public virtual DbSet<tbConfiguracionFacturas> tbConfiguracionFacturas { get; set; }

    public virtual DbSet<tbCuentasPorCobrar> tbCuentasPorCobrar { get; set; }

    public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }

    public virtual DbSet<tbDescuentos> tbDescuentos { get; set; }

    public virtual DbSet<tbDescuentosDetalle> tbDescuentosDetalle { get; set; }

    public virtual DbSet<tbDevoluciones> tbDevoluciones { get; set; }

    public virtual DbSet<tbDevolucionesDetalle> tbDevolucionesDetalle { get; set; }

    public virtual DbSet<tbEmpleados> tbEmpleados { get; set; }

    public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }

    public virtual DbSet<tbFacturas> tbFacturas { get; set; }

    public virtual DbSet<tbFacturasDetalle> tbFacturasDetalle { get; set; }

    public virtual DbSet<tbImpuestos> tbImpuestos { get; set; }

    public virtual DbSet<tbInventarioBodegas> tbInventarioBodegas { get; set; }

    public virtual DbSet<tbInventarioSucursales> tbInventarioSucursales { get; set; }

    public virtual DbSet<tbMarcas> tbMarcas { get; set; }

    public virtual DbSet<tbMarcasVehiculos> tbMarcasVehiculos { get; set; }

    public virtual DbSet<tbModelos> tbModelos { get; set; }

    public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }

    public virtual DbSet<tbPantallas> tbPantallas { get; set; }

    public virtual DbSet<tbPedidos> tbPedidos { get; set; }

    public virtual DbSet<tbPedidosDetalle> tbPedidosDetalle { get; set; }

    public virtual DbSet<tbPermisos> tbPermisos { get; set; }

    public virtual DbSet<tbPreciosPorProducto> tbPreciosPorProducto { get; set; }

    public virtual DbSet<tbProductos> tbProductos { get; set; }

    public virtual DbSet<tbPromociones> tbPromociones { get; set; }

    public virtual DbSet<tbPromocionesDetalle> tbPromocionesDetalle { get; set; }

    public virtual DbSet<tbProveedores> tbProveedores { get; set; }

    public virtual DbSet<tbPuntosEmision> tbPuntosEmision { get; set; }

    public virtual DbSet<tbRecargas> tbRecargas { get; set; }

    public virtual DbSet<tbRecargasDetalle> tbRecargasDetalle { get; set; }

    public virtual DbSet<tbRegistrosCAI> tbRegistrosCAI { get; set; }

    public virtual DbSet<tbRoles> tbRoles { get; set; }

    public virtual DbSet<tbRutas> tbRutas { get; set; }

    public virtual DbSet<tbSubcategorias> tbSubcategorias { get; set; }

    public virtual DbSet<tbSucursales> tbSucursales { get; set; }

    public virtual DbSet<tbTraslados> tbTraslados { get; set; }

    public virtual DbSet<tbTrasladosDetalle> tbTrasladosDetalle { get; set; }

    public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }

    public virtual DbSet<tbVendedores> tbVendedores { get; set; }

    public virtual DbSet<tbVendedoresPorRuta> tbVendedoresPorRuta { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<tbAcciones>(entity =>
        {
            entity.HasKey(e => e.Acci_Id).HasName("PK_Acce_tbAcciones_Acci_Id");

            entity.ToTable("tbAcciones", "Acce");

            entity.Property(e => e.Acci_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<tbBodegas>(entity =>
        {
            entity.HasKey(e => e.Bode_Id).HasName("PK_Logi_tbBodegas_Bode_Id");

            entity.ToTable("tbBodegas", "Logi");

            entity.Property(e => e.Bode_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Bode_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Bode_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Vehi_Capacidad).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.Vehi_Placa)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Vehi_TipoCamion)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Vehi_VIN)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);

            entity.HasOne(d => d.Mode).WithMany(p => p.tbBodegas)
                .HasForeignKey(d => d.Mode_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbBodegas_Gral_tbModelos_Mode_Id");

            entity.HasOne(d => d.RegC).WithMany(p => p.tbBodegas)
                .HasForeignKey(d => d.RegC_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbBodegas_Vnta_tbRegistrosCAI_RegC_Id");

            entity.HasOne(d => d.Sucu).WithMany(p => p.tbBodegas)
                .HasForeignKey(d => d.Sucu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbBodegas_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbBodegasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbBodegas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbBodegasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Logi_tbBodegas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Vend).WithMany(p => p.tbBodegas)
                .HasForeignKey(d => d.Vend_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbBodegas_Vnta_tbVendedores_Vend_Id");
        });

        modelBuilder.Entity<tbCAIs>(entity =>
        {
            entity.HasKey(e => e.NCai_Id).HasName("PK_Vnta_tbCAIs_NCai_Id");

            entity.ToTable("tbCAIs", "Vnta");

            entity.Property(e => e.NCai_Codigo)
                .IsRequired()
                .HasMaxLength(37)
                .IsUnicode(false);
            entity.Property(e => e.NCai_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.NCai_Estado).HasDefaultValue(true);
            entity.Property(e => e.NCai_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.NCai_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCAIsUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbCAIs_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCAIsUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbCAIs_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbCanales>(entity =>
        {
            entity.HasKey(e => e.Cana_Id).HasName("PK_Gral_tbCanales_Cana_Id");

            entity.ToTable("tbCanales", "Gral");

            entity.Property(e => e.Cana_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Cana_Estado).HasDefaultValue(true);
            entity.Property(e => e.Cana_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Cana_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Cana_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCanalesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbCanales_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCanalesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbCanales_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbCargos>(entity =>
        {
            entity.HasKey(e => e.Carg_Id).HasName("PK_Gral_tbCargos_Carg_Id");

            entity.ToTable("tbCargos", "Gral");

            entity.Property(e => e.Carg_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Carg_Estado).HasDefaultValue(true);
            entity.Property(e => e.Carg_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Carg_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCargosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbCargos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCargosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbCargos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbCategorias>(entity =>
        {
            entity.HasKey(e => e.Cate_Id).HasName("PK_Inve_tbCategorias_Cate_Id");

            entity.ToTable("tbCategorias", "Inve");

            entity.Property(e => e.Cate_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Cate_Estado).HasDefaultValue(true);
            entity.Property(e => e.Cate_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Cate_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCategoriasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbCategorias_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCategoriasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbCategorias_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbClientes>(entity =>
        {
            entity.HasKey(e => e.Clie_Id).HasName("PK_Gral_tbClientes_Clie_Id");

            entity.ToTable("tbClientes", "Gral");

            entity.Property(e => e.Clie_Apellidos)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Codigo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Correo)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Clie_DNI)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Clie_DireccionExacta)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Estado).HasDefaultValue(true);
            entity.Property(e => e.Clie_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Clie_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Clie_Latitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Clie_LimiteCredito).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Clie_Longitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Clie_NombreNegocio)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Nombres)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Clie_ObservacionRetiro)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Clie_RTN)
                .IsRequired()
                .HasMaxLength(16)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Saldo).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Clie_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Clie_Telefono)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);
            entity.Property(e => e.Clie_Vencido).HasDefaultValue(false);

            entity.HasOne(d => d.Cana).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.Cana_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbClientes_tbCanales_Cana_Id");

            entity.HasOne(d => d.Colo).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.Colo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbClientes_tbColonias_Colo_Id");

            entity.HasOne(d => d.EsCv).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.EsCv_Id)
                .HasConstraintName("FK_Gral_tbClientes_tbEstadosCiviles_EsCv_Id");

            entity.HasOne(d => d.Ruta).WithMany(p => p.tbClientes)
                .HasForeignKey(d => d.Ruta_Id)
                .HasConstraintName("FK_Gral_tbClientes_tbRutas_Ruta_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbClientesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbClientes_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbClientesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbClientes_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbColonias>(entity =>
        {
            entity.HasKey(e => e.Colo_Id).HasName("PK_Gral_tbColonias_Colo_Id");

            entity.ToTable("tbColonias", "Gral");

            entity.Property(e => e.Colo_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Colo_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Colo_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_Codigo)
                .IsRequired()
                .HasMaxLength(4)
                .IsUnicode(false);

            entity.HasOne(d => d.Muni_CodigoNavigation).WithMany(p => p.tbColonias)
                .HasForeignKey(d => d.Muni_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbColonias_Gral_tbMunicipios_Muni_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbColoniasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbColonias_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbColoniasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbColonias_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbConfiguracionFacturas>(entity =>
        {
            entity.HasKey(e => e.CoFa_Id).HasName("PK_Vnta_tbConfiguracionFacturas_CoFa_Id");

            entity.ToTable("tbConfiguracionFacturas", "Vnta");

            entity.Property(e => e.CoFa_Correo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoFa_DireccionEmpresa)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoFa_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.CoFa_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.CoFa_Logo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoFa_NombreEmpresa)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoFa_RTN)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CoFa_Telefono1)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.CoFa_Telefono2)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.Colo).WithMany(p => p.tbConfiguracionFacturas)
                .HasForeignKey(d => d.Colo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbConfiguracionFacturas_Gral_tbColonias_Colo_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbConfiguracionFacturasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbConfiguracionFacturas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbConfiguracionFacturasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbConfiguracionFacturas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbCuentasPorCobrar>(entity =>
        {
            entity.HasKey(e => e.CPCo_Id).HasName("PK_Vnta_tbCuentasPorCobrar_CPCo_Id");

            entity.ToTable("tbCuentasPorCobrar", "Vnta");

            entity.Property(e => e.CPCo_Anulado).HasDefaultValue(false);
            entity.Property(e => e.CPCo_Estado).HasDefaultValue(true);
            entity.Property(e => e.CPCo_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.CPCo_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.CPCo_Observaciones)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.CPCo_Saldada).HasDefaultValue(false);
            entity.Property(e => e.CPCo_Saldo).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.CPCo_Valor).HasColumnType("decimal(12, 2)");

            entity.HasOne(d => d.Clie).WithMany(p => p.tbCuentasPorCobrar)
                .HasForeignKey(d => d.Clie_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbCuentasPorCobrar_Gral_tbClientes_Clie_Id");

            entity.HasOne(d => d.Fact).WithMany(p => p.tbCuentasPorCobrar)
                .HasForeignKey(d => d.Fact_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbCuentasPorCobrar_Vnta_tbFacturas_Fact_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbCuentasPorCobrarUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbCuentasPorCobrar_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbCuentasPorCobrarUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbCuentasPorCobrar_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbDepartamentos>(entity =>
        {
            entity.HasKey(e => e.Depa_Codigo).HasName("PK_Gral_tbDepartamentos_Depa_Codigo");

            entity.ToTable("tbDepartamentos", "Gral");

            entity.Property(e => e.Depa_Codigo)
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Depa_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Depa_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Depa_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbDepartamentosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbDepartamentos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbDepartamentosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbDepartamentos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbDescuentos>(entity =>
        {
            entity.HasKey(e => e.Desc_Id).HasName("PK_Inve_tbDescuentos_Desc_Id");

            entity.ToTable("tbDescuentos", "Inve");

            entity.Property(e => e.Desc_Aplicar)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Desc_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Desc_Estado).HasDefaultValue(true);
            entity.Property(e => e.Desc_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Desc_FechaFin).HasColumnType("datetime");
            entity.Property(e => e.Desc_FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.Desc_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Desc_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Desc_Valor).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Cana).WithMany(p => p.tbDescuentos)
                .HasForeignKey(d => d.Cana_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbDescuentos_Gral_tbCanales_Cana_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbDescuentosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbDescuentos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbDescuentosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbDescuentos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbDescuentosDetalle>(entity =>
        {
            entity.HasKey(e => e.DesD_Id).HasName("PK_Inve_tbDescuentosDetalle_Desd_Id");

            entity.ToTable("tbDescuentosDetalle", "Inve");

            entity.Property(e => e.DesD_Estado).HasDefaultValue(true);
            entity.Property(e => e.DesD_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.DesD_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Desc).WithMany(p => p.tbDescuentosDetalle)
                .HasForeignKey(d => d.Desc_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbDescuentosDetalle_Inve_tbDescuentos_Desc_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbDescuentosDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbDescuentosDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbDescuentosDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbDescuentosDetalle_Usua_Modificacion_Acce_tbUsuario_Usua_Id");
        });

        modelBuilder.Entity<tbDevoluciones>(entity =>
        {
            entity.HasKey(e => e.Devo_Id).HasName("PK_Vnta_tbDevoluciones_Devo_Id");

            entity.ToTable("tbDevoluciones", "Vnta");

            entity.Property(e => e.Devo_Estado).HasDefaultValue(true);
            entity.Property(e => e.Devo_Fecha).HasColumnType("datetime");
            entity.Property(e => e.Devo_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Devo_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Devo_Motivo)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Clie).WithMany(p => p.tbDevolucionesClie)
                .HasForeignKey(d => d.Clie_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbDevoluciones_Gral_tbClientes_Clie_Id");

            entity.HasOne(d => d.Fact).WithMany(p => p.tbDevolucionesFact)
                .HasForeignKey(d => d.Fact_Id)
                .HasConstraintName("FK_Vnta_tbDevoluciones_Vnta_tbFacturas_Fact_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbDevolucionesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbDevoluciones_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbDevolucionesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbDevoluciones_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbDevolucionesDetalle>(entity =>
        {
            entity.HasKey(e => e.DevD_Id).HasName("PK_Vnta_tbDevolucionesDetalle_DevD_Id");

            entity.ToTable("tbDevolucionesDetalle", "Vnta");

            entity.Property(e => e.DevD_Estado).HasDefaultValue(true);
            entity.Property(e => e.DevD_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.DevD_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Devo).WithMany(p => p.tbDevolucionesDetalle)
                .HasForeignKey(d => d.Devo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbDevolucionesDetalle_Vnta_tbDevoluciones_Devo_Id");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbDevolucionesDetalle)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbDevolucionesDetalle_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbDevolucionesDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbDevolucionesDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbDevolucionesDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbDevolucionesDetalle_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbEmpleados>(entity =>
        {
            entity.HasKey(e => e.Empl_Id).HasName("PK_Gral_tbEmpleados_Empl_Id");

            entity.ToTable("tbEmpleados", "Gral");

            entity.HasIndex(e => e.Empl_Codigo, "UQ__tbEmplea__40E62F3A78D3E75E").IsUnique();

            entity.Property(e => e.Empl_Apellidos)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Empl_Codigo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Empl_Correo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Empl_DNI)
                .IsRequired()
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Empl_DireccionExacta)
                .IsRequired()
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Empl_Estado).HasDefaultValue(true);
            entity.Property(e => e.Empl_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Empl_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Empl_Nombres)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Empl_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Empl_Telefono)
                .IsRequired()
                .HasMaxLength(17)
                .IsUnicode(false);

            entity.HasOne(d => d.Carg).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Carg_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbEmpleados_Gral_tbCargos_Carg_Id");

            entity.HasOne(d => d.Colo).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Colo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbEmpleados_Gral_tbColonias_Colo_Id");

            entity.HasOne(d => d.EsCv).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.EsCv_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbEmpleados_Gral_tbEstadosCiviles_EsCv_Id");

            entity.HasOne(d => d.Sucu).WithMany(p => p.tbEmpleados)
                .HasForeignKey(d => d.Sucu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbEmpleados_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbEmpleadosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbEmpleados_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbEmpleadosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbEmpleados_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbEstadosCiviles>(entity =>
        {
            entity.HasKey(e => e.EsCv_Id).HasName("PK_Gral_tbEstadosCiviles_EsCv_Id");

            entity.ToTable("tbEstadosCiviles", "Gral");

            entity.Property(e => e.EsCv_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.EsCv_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.EsCv_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbEstadosCivilesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbEstadosCiviles_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbEstadosCivilesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbEstadosCiviles_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbFacturas>(entity =>
        {
            entity.HasKey(e => e.Fact_Id).HasName("PK_Vnta_tbFacturas_Fact_Id");

            entity.ToTable("tbFacturas", "Vnta");

            entity.Property(e => e.Fact_Anulado).HasDefaultValue(false);
            entity.Property(e => e.Fact_AutorizadoPor)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Fact_Estado).HasDefaultValue(true);
            entity.Property(e => e.Fact_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Fact_FechaEmision).HasColumnType("datetime");
            entity.Property(e => e.Fact_FechaLimiteEmision).HasColumnType("datetime");
            entity.Property(e => e.Fact_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Fact_ImporteExento).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Fact_ImporteExonerado).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Fact_ImporteGravado15).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Fact_ImporteGravado18).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.Fact_Latitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Fact_Longitud).HasColumnType("decimal(9, 6)");
            entity.Property(e => e.Fact_Numero)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Fact_RangoFinalAutorizado)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Fact_RangoInicialAutorizado)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Fact_Referencia)
                .HasMaxLength(90)
                .IsUnicode(false);
            entity.Property(e => e.Fact_Subtotal).HasColumnType("decimal(11, 2)");
            entity.Property(e => e.Fact_TipoDeDocumento)
                .IsRequired()
                .HasMaxLength(3)
                .IsUnicode(false);
            entity.Property(e => e.Fact_TipoVenta)
                .HasMaxLength(15)
                .IsUnicode(false);
            entity.Property(e => e.Fact_Total).HasColumnType("decimal(11, 2)");
            entity.Property(e => e.Fact_TotalDescuento).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Fact_TotalImpuesto15).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Fact_TotalImpuesto18).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Fact_Usuario)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.Clie).WithMany(p => p.tbFacturas)
                .HasForeignKey(d => d.Clie_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbFacturas_Gral_tbClientes_Clie_Id");

            entity.HasOne(d => d.RegC).WithMany(p => p.tbFacturas)
                .HasForeignKey(d => d.RegC_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbFacturas_Vnta_tbRegistrosCAI_RegC_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbFacturasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbFacturas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbFacturasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbFacturas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbFacturasDetalle>(entity =>
        {
            entity.HasKey(e => e.FaDe_Id).HasName("PK_Vnta_tbFacturasDetalle_FaDe_Id");

            entity.ToTable("tbFacturasDetalle", "Vnta");

            entity.Property(e => e.FaDe_Descuento).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.FaDe_Estado).HasDefaultValue(true);
            entity.Property(e => e.FaDe_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FaDe_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.FaDe_Impuesto).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.FaDe_PrecioUnitario).HasColumnType("decimal(13, 6)");
            entity.Property(e => e.FaDe_Subtotal).HasColumnType("decimal(12, 2)");
            entity.Property(e => e.FaDe_Total).HasColumnType("decimal(12, 2)");

            entity.HasOne(d => d.Fact).WithMany(p => p.tbFacturasDetalle)
                .HasForeignKey(d => d.Fact_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbFacturasDetalle_Vnta_tbFacturas_Fact_Id");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbFacturasDetalle)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbFacturasDetalle_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbFacturasDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbFacturasDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbFacturasDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbFacturasDetalle_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbImpuestos>(entity =>
        {
            entity.HasKey(e => e.Impu_Id).HasName("PK_Vnta_tbImpuestos_Impu_Id");

            entity.ToTable("tbImpuestos", "Vnta");

            entity.Property(e => e.Impu_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Impu_Estado).HasDefaultValue(true);
            entity.Property(e => e.Impu_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Impu_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Impu_Valor).HasColumnType("numeric(6, 2)");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbImpuestosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbImpuestos_Usua_Creacion_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbImpuestosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbImpuestos_Usua_Modificacion_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbInventarioBodegas>(entity =>
        {
            entity.HasKey(e => e.InBo_Id).HasName("PK_Inve_tbInventarioBodegas_InBo_Id");

            entity.ToTable("tbInventarioBodegas", "Inve");

            entity.Property(e => e.InBo_Estado).HasDefaultValue(true);
            entity.Property(e => e.InBo_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.InBo_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Bode).WithMany(p => p.tbInventarioBodegas)
                .HasForeignKey(d => d.Bode_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbInventarioBodegas_Bode_Id");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbInventarioBodegas)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbInventarioBodegas_Gral_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbInventarioBodegasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbInventarioBodegas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbInventarioBodegasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbInventarioBodegas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbInventarioSucursales>(entity =>
        {
            entity.HasKey(e => e.InSu_Id).HasName("PK_Inve_tbInventarioSucursales_InSu_Id");

            entity.ToTable("tbInventarioSucursales", "Inve");

            entity.Property(e => e.InSu_Estado).HasDefaultValue(true);
            entity.Property(e => e.InSu_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.InSu_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbInventarioSucursales)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbInventarioSucursales_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Sucu).WithMany(p => p.tbInventarioSucursales)
                .HasForeignKey(d => d.Sucu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbInventarioSucursales_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbInventarioSucursalesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbInventarioSucursales_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbInventarioSucursalesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbInventarioSucursales_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbMarcas>(entity =>
        {
            entity.HasKey(e => e.Marc_Id).HasName("PK_Gral_tbMarcas_Marc_Id");

            entity.ToTable("tbMarcas", "Gral");

            entity.Property(e => e.Marc_Descripcion)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Marc_Estado).HasDefaultValue(true);
            entity.Property(e => e.Marc_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Marc_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbMarcasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbMarcas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbMarcasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbMarcas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbMarcasVehiculos>(entity =>
        {
            entity.HasKey(e => e.MaVe_Id).HasName("PK_Gral_tbMarcasVehiculos_MaVe_Id");

            entity.ToTable("tbMarcasVehiculos", "Gral");

            entity.Property(e => e.MaVe_Estado).HasDefaultValue(true);
            entity.Property(e => e.MaVe_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.MaVe_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.MaVe_Marca)
                .IsRequired()
                .HasMaxLength(70)
                .IsUnicode(false);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbMarcasVehiculosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbMarcasVehiculos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbMarcasVehiculosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbMarcasVehiculos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbModelos>(entity =>
        {
            entity.HasKey(e => e.Mode_Id).HasName("PK_Gral_tbModelos_Mode_Id");

            entity.ToTable("tbModelos", "Gral");

            entity.Property(e => e.Mode_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Mode_Estado).HasDefaultValue(true);
            entity.Property(e => e.Mode_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Mode_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.MaVe).WithMany(p => p.tbModelos)
                .HasForeignKey(d => d.MaVe_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbModelos_Gral_tbMarcasVehiculos_MaVe_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbModelosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbModelos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbModelosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbModelos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbMunicipios>(entity =>
        {
            entity.HasKey(e => e.Muni_Codigo).HasName("PK_Gral_tbMunicipios_Muni_Codigo");

            entity.ToTable("tbMunicipios", "Gral");

            entity.Property(e => e.Muni_Codigo)
                .HasMaxLength(4)
                .IsUnicode(false);
            entity.Property(e => e.Depa_Codigo)
                .IsRequired()
                .HasMaxLength(2)
                .IsUnicode(false);
            entity.Property(e => e.Muni_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Muni_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Muni_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Depa_CodigoNavigation).WithMany(p => p.tbMunicipios)
                .HasForeignKey(d => d.Depa_Codigo)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbMunicipios_Gral_tbDepartamentos_Dep_Codigo");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbMunicipiosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbMunicipios_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbMunicipiosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbMunicipios_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPantallas>(entity =>
        {
            entity.HasKey(e => e.Pant_Id).HasName("PK_Acce_tbPantallas_Pant_Id");

            entity.ToTable("tbPantallas", "Acce");

            entity.Property(e => e.Pant_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Pant_Icon)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Pant_Ruta)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);

            entity.HasOne(d => d.Pant_PadreNavigation).WithMany(p => p.InversePant_PadreNavigation)
                .HasForeignKey(d => d.Pant_Padre)
                .HasConstraintName("FK_Acce_tbPantallas_Pant_Padre_Acce_tbPantallas_Pant_Id");
        });

        modelBuilder.Entity<tbPedidos>(entity =>
        {
            entity.HasKey(e => e.Pedi_Id).HasName("PK_Vnta_tbPedidos_Pedi_Id");

            entity.ToTable("tbPedidos", "Vnta");

            entity.Property(e => e.Pedi_Estado).HasDefaultValue(true);
            entity.Property(e => e.Pedi_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Pedi_FechaEntrega).HasColumnType("datetime");
            entity.Property(e => e.Pedi_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Pedi_FechaPedido).HasColumnType("datetime");

            entity.HasOne(d => d.Clie).WithMany(p => p.tbPedidos)
                .HasForeignKey(d => d.Clie_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPedidos_Gral_tbClientes_Clie_Id");

            entity.HasOne(d => d.Empl).WithMany(p => p.tbPedidos)
                .HasForeignKey(d => d.Empl_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPedidos_Gral_tbEmpleados_Empl_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPedidosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPedidos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPedidosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbPedidos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPedidosDetalle>(entity =>
        {
            entity.HasKey(e => e.PeDe_Id).HasName("PK_Vnta_tbPedidosDetalle_PeDe_Id");

            entity.ToTable("tbPedidosDetalle", "Vnta");

            entity.Property(e => e.PeDe_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.PeDe_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.PeDe_ProdPrecio).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.PreP_Estado).HasDefaultValue(true);

            entity.HasOne(d => d.Pedi).WithMany(p => p.tbPedidosDetalle)
                .HasForeignKey(d => d.Pedi_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPedidosDetalle_Vnta_tbPedidos_Pedi_Id");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbPedidosDetalle)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPedidosDetalle_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPedidosDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPedidosDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPedidosDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbPedidosDetalle_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPermisos>(entity =>
        {
            entity.HasKey(e => e.Perm_Id).HasName("PK_Acce_tbPermisos_Perm_Id");

            entity.ToTable("tbPermisos", "Acce");

            entity.Property(e => e.Perm_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Perm_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Acci).WithMany(p => p.tbPermisos)
                .HasForeignKey(d => d.Acci_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbPermisos_Acce_tbAcciones_Acci_Id");

            entity.HasOne(d => d.Pant).WithMany(p => p.tbPermisos)
                .HasForeignKey(d => d.Pant_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbPermisos_Acce_tbPantallas_Pant_Id");

            entity.HasOne(d => d.Role).WithMany(p => p.tbPermisos)
                .HasForeignKey(d => d.Role_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbPermisos_Acce_tbRoles_Role_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPermisosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbPermisos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPermisosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Acce_tbPermisos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPreciosPorProducto>(entity =>
        {
            entity.HasKey(e => e.PreP_Id).HasName("PK_Vnta_tbPreciosPorProducto_PreP_Id");

            entity.ToTable("tbPreciosPorProducto", "Vnta");

            entity.Property(e => e.PreP_Estado).HasDefaultValue(true);
            entity.Property(e => e.PreP_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.PreP_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.PreP_PrecioContado).HasColumnType("numeric(8, 2)");
            entity.Property(e => e.PreP_PrecioCredito).HasColumnType("numeric(8, 2)");

            entity.HasOne(d => d.Prod).WithMany(p => p.tbPreciosPorProducto)
                .HasForeignKey(d => d.Prod_Id)
                .HasConstraintName("FK_Vnta_tbPreciosPorProducto_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPreciosPorProductoUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .HasConstraintName("FK_Vnta_tbPreciosPorProducto_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPreciosPorProductoUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbPreciosPorProducto_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbProductos>(entity =>
        {
            entity.HasKey(e => e.Prod_Id).HasName("PK_Inve_tbProductos_Prod_Id");

            entity.ToTable("tbProductos", "Inve");

            entity.Property(e => e.Prod_Codigo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Prod_CodigoBarra)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Prod_CostoTotal).HasColumnType("decimal(10, 2)");
            entity.Property(e => e.Prod_Descripcion)
                .HasMaxLength(70)
                .IsUnicode(false);
            entity.Property(e => e.Prod_DescripcionCorta)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Prod_EsPromo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Prod_Estado).HasDefaultValue(true);
            entity.Property(e => e.Prod_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Prod_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Prod_PagaImpuesto)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Prod_PrecioUnitario).HasColumnType("decimal(10, 2)");

            entity.HasOne(d => d.Impu).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Impu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbProductos_Vnta_tbImpuestos_Impu_Id");

            entity.HasOne(d => d.Marc).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Marc_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbProductos_Gral_tbMarcas_Marc_Id");

            entity.HasOne(d => d.Prov).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Prov_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbProductos_Gral_tbProveedores_Prov_Id");

            entity.HasOne(d => d.Subc).WithMany(p => p.tbProductos)
                .HasForeignKey(d => d.Subc_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbProductos_Inve_tbSubcategorias_Subc_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbProductosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbProductos_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbProductosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbProductos_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPromociones>(entity =>
        {
            entity.HasKey(e => e.Prom_Id).HasName("PK_Inve_tbPromociones_Prom_Id");

            entity.ToTable("tbPromociones", "Inve");

            entity.Property(e => e.Muni_Codigo)
                .HasMaxLength(4)
                .IsUnicode(false)
                .HasDefaultValue("N/A");
            entity.Property(e => e.Prom_Aplicar)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Prom_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Prom_Estado).HasDefaultValue(true);
            entity.Property(e => e.Prom_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Prom_FechaFin).HasColumnType("datetime");
            entity.Property(e => e.Prom_FechaInicio).HasColumnType("datetime");
            entity.Property(e => e.Prom_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Prom_Valor).HasColumnType("decimal(18, 2)");

            entity.HasOne(d => d.Muni_CodigoNavigation).WithMany(p => p.tbPromociones)
                .HasForeignKey(d => d.Muni_Codigo)
                .HasConstraintName("FK_Inve_tbPromociones_Gral_tbMunicipios_Muni_Codigo");

            entity.HasOne(d => d.Sucu).WithMany(p => p.tbPromociones)
                .HasForeignKey(d => d.Sucu_Id)
                .HasConstraintName("FK_Inve_tbPromociones_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPromocionesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbPromociones_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPromocionesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbPromociones_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPromocionesDetalle>(entity =>
        {
            entity.HasKey(e => e.PrDe_Id).HasName("PK_Inve_tbPromocionesDetalle_PrDe_Id");

            entity.ToTable("tbPromocionesDetalle", "Inve");

            entity.Property(e => e.PrDe_Estado).HasDefaultValue(true);
            entity.Property(e => e.PrDe_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.PrDe_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Prom).WithMany(p => p.tbPromocionesDetalle)
                .HasForeignKey(d => d.Prom_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbPromocionesDetalle_Inve_tbPromociones_Prom_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPromocionesDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbPromocionesDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPromocionesDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbPromocionesDetalle_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbProveedores>(entity =>
        {
            entity.HasKey(e => e.Prov_Id).HasName("PK_Gral_tbProveedores_Proveedor_Id");

            entity.ToTable("tbProveedores", "Gral");

            entity.Property(e => e.FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Prov_Codigo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Prov_Correo)
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Prov_DireccionExacta)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Prov_Estado).HasDefaultValue(true);
            entity.Property(e => e.Prov_NombreContacto)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Prov_NombreEmpresa)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Prov_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);
            entity.Property(e => e.Prov_Telefono)
                .HasMaxLength(17)
                .IsUnicode(false);

            entity.HasOne(d => d.Colo).WithMany(p => p.tbProveedores)
                .HasForeignKey(d => d.Colo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbProveedores_Gral_tbColonias_Colo_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbProveedoresUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbProveedores_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbProveedoresUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbProveedores_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbPuntosEmision>(entity =>
        {
            entity.HasKey(e => e.PuEm_Id).HasName("PK_Vnta_tbPuntosEmision_PuEm_Id");

            entity.ToTable("tbPuntosEmision", "Vnta");

            entity.Property(e => e.PuEm_Codigo)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.PuEm_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.PuEm_Estado).HasDefaultValue(true);
            entity.Property(e => e.PuEm_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.PuEm_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbPuntosEmisionUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbPuntosEmision_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbPuntosEmisionUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbPuntosEmision_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbRecargas>(entity =>
        {
            entity.HasKey(e => e.Reca_Id).HasName("PK_Logi_tbRecargas_Reca_Id");

            entity.ToTable("tbRecargas", "Logi");

            entity.Property(e => e.Reca_Estado).HasDefaultValue(true);
            entity.Property(e => e.Reca_Fecha).HasColumnType("datetime");
            entity.Property(e => e.Reca_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Reca_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Reca_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Bode).WithMany(p => p.tbRecargas)
                .HasForeignKey(d => d.Bode_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRecargas_Logi_tbBodegas_Bode_Id");

            entity.HasOne(d => d.Empl).WithMany(p => p.tbRecargas)
                .HasForeignKey(d => d.Empl_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRecargas_Gral_tbEmpleados_Empl_Id");

            entity.HasOne(d => d.Tras).WithMany(p => p.tbRecargas)
                .HasForeignKey(d => d.Tras_Id)
                .HasConstraintName("FK_Logi_tbRecargas_Logi_tbTraslados_Tras_Id");

            entity.HasOne(d => d.Usua_ConfirmacionNavigation).WithMany(p => p.tbRecargasUsua_ConfirmacionNavigation)
                .HasForeignKey(d => d.Usua_Confirmacion)
                .HasConstraintName("FK_Logi_tbRecargas_Acce_tbUsuarios_Usua_Confirmacion");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbRecargasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRecargas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbRecargasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Logi_tbRecargas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbRecargasDetalle>(entity =>
        {
            entity.HasKey(e => e.ReDe_Id).HasName("PK_Logi_tbRecargasDetalle_ReDe_Id");

            entity.ToTable("tbRecargasDetalle", "Logi");

            entity.Property(e => e.ReDe_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.ReDe_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.ReDe_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Prod).WithMany(p => p.tbRecargasDetalle)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRecargasDetalle_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Reca).WithMany(p => p.tbRecargasDetalle)
                .HasForeignKey(d => d.Reca_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRecargasDetalle_Logi_tbRecargas_Reca_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbRecargasDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRecargasDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbRecargasDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Logi_tbRecargasDetalle_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbRegistrosCAI>(entity =>
        {
            entity.HasKey(e => e.RegC_Id).HasName("PK_Vnta_tbRegistrosCAI_NCai_Id");

            entity.ToTable("tbRegistrosCAI", "Vnta");

            entity.Property(e => e.RegC_Descripcion)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.RegC_Estado).HasDefaultValue(true);
            entity.Property(e => e.RegC_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.RegC_FechaFinalEmision).HasColumnType("datetime");
            entity.Property(e => e.RegC_FechaInicialEmision).HasColumnType("datetime");
            entity.Property(e => e.RegC_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.RegC_RangoFinal)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);
            entity.Property(e => e.RegC_RangoInicial)
                .IsRequired()
                .HasMaxLength(30)
                .IsUnicode(false);

            entity.HasOne(d => d.NCai).WithMany(p => p.tbRegistrosCAI)
                .HasForeignKey(d => d.NCai_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbRegistrosCAI_Gral_tbCAIs_NCai_Id");

            entity.HasOne(d => d.PuEm).WithMany(p => p.tbRegistrosCAI)
                .HasForeignKey(d => d.PuEm_Id)
                .HasConstraintName("FK_Vnta_tbRegistrosCAI_Gral_tbPuntosEmision_PuEm_Id");

            entity.HasOne(d => d.Sucu).WithMany(p => p.tbRegistrosCAI)
                .HasForeignKey(d => d.Sucu_Id)
                .HasConstraintName("FK_Vnta_tbRegistrosCAI_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbRegistrosCAIUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbRegistrosCAI_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbRegistrosCAIUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbRegistrosCAI_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbRoles>(entity =>
        {
            entity.HasKey(e => e.Role_Id).HasName("PK_Acce_tbRoles_Role_Id");

            entity.ToTable("tbRoles", "Acce");

            entity.Property(e => e.Role_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Role_Estado).HasDefaultValue(true);
            entity.Property(e => e.Role_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Role_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbRolesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Acce_tbRoles_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbRolesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Acce_tbRoles_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbRutas>(entity =>
        {
            entity.HasKey(e => e.Ruta_Id).HasName("PK_Logi_tbRutas_Ruta_Id");

            entity.ToTable("tbRutas", "Logi");

            entity.Property(e => e.Ruta_Codigo)
                .IsRequired()
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.Ruta_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Ruta_Estado).HasDefaultValue(true);
            entity.Property(e => e.Ruta_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Ruta_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Ruta_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbRutasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbRutas_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbRutasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Logi_tbRutas_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbSubcategorias>(entity =>
        {
            entity.HasKey(e => e.Subc_Id).HasName("PK_Inve_tbSubcategorias_Subc_Id");

            entity.ToTable("tbSubcategorias", "Inve");

            entity.Property(e => e.Subc_Descripcion)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Subc_Estado).HasDefaultValue(true);
            entity.Property(e => e.Subc_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Subc_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Cate).WithMany(p => p.tbSubcategorias)
                .HasForeignKey(d => d.Cate_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbSubcategorias_tbCategorias_Cate_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbSubcategoriasUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Inve_tbSubcategorias_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbSubcategoriasUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Inve_tbSubcategorias_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbSucursales>(entity =>
        {
            entity.HasKey(e => e.Sucu_Id).HasName("PK_Gral_tbSucursales_Sucu_Id");

            entity.ToTable("tbSucursales", "Gral");

            entity.Property(e => e.Sucu_Correo)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Sucu_Descripcion)
                .IsRequired()
                .HasMaxLength(80)
                .IsUnicode(false);
            entity.Property(e => e.Sucu_DireccionExacta)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Sucu_Estado).HasDefaultValue(true);
            entity.Property(e => e.Sucu_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Sucu_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Sucu_Telefono1)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Sucu_Telefono2)
                .HasMaxLength(10)
                .IsUnicode(false);

            entity.HasOne(d => d.Colo).WithMany(p => p.tbSucursales)
                .HasForeignKey(d => d.Colo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbSucursales_Gral_tbColonias_Colo_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbSucursalesUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Gral_tbSucursales_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbSucursalesUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Gral_tbSucursales_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbTraslados>(entity =>
        {
            entity.HasKey(e => e.Tras_Id).HasName("PK_Logi_tbTraslados_Tras_Id");

            entity.ToTable("tbTraslados", "Logi");

            entity.Property(e => e.Tras_Estado).HasDefaultValue(true);
            entity.Property(e => e.Tras_Fecha).HasColumnType("datetime");
            entity.Property(e => e.Tras_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Tras_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Tras_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Tras_DestinoNavigation).WithMany(p => p.tbTraslados)
                .HasForeignKey(d => d.Tras_Destino)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbTraslados_Logi_tbBodegas_Tras_Destino");

            entity.HasOne(d => d.Tras_OrigenNavigation).WithMany(p => p.tbTraslados)
                .HasForeignKey(d => d.Tras_Origen)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbTraslados_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbTrasladosUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_tbTraslados_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbTrasladosUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Logi_tbTraslados_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbTrasladosDetalle>(entity =>
        {
            entity.HasKey(e => e.TrDe_Id).HasName("PK_Logi_TrasladosDetalle_ProT_Id");

            entity.ToTable("tbTrasladosDetalle", "Logi");

            entity.Property(e => e.TrDe_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.TrDe_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.TrDe_Observaciones)
                .HasMaxLength(200)
                .IsUnicode(false);

            entity.HasOne(d => d.Prod).WithMany(p => p.tbTrasladosDetalle)
                .HasForeignKey(d => d.Prod_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_TrasladosDetalle_Inve_tbProductos_Prod_Id");

            entity.HasOne(d => d.Tras).WithMany(p => p.tbTrasladosDetalle)
                .HasForeignKey(d => d.Tras_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_TrasladosDetalle_Logi_tbTraslados_Tras_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbTrasladosDetalleUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Logi_TrasladosDetalle_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbTrasladosDetalleUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Logi_TrasladosDetalle_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");
        });

        modelBuilder.Entity<tbUsuarios>(entity =>
        {
            entity.HasKey(e => e.Usua_Id).HasName("PK_Acce_tbUsuarios_Usua_Id");

            entity.ToTable("tbUsuarios", "Acce");

            entity.HasIndex(e => e.Usua_Usuario, "UQ__tbUsuari__9ED44AB4B049A082").IsUnique();

            entity.Property(e => e.Usua_Clave).IsRequired();
            entity.Property(e => e.Usua_Codigo)
                .HasMaxLength(5)
                .IsUnicode(false);
            entity.Property(e => e.Usua_EsAdmin).HasDefaultValue(true);
            entity.Property(e => e.Usua_Estado).HasDefaultValue(true);
            entity.Property(e => e.Usua_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Usua_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Usua_Usuario)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<tbVendedores>(entity =>
        {
            entity.HasKey(e => e.Vend_Id).HasName("PK_Vnta_tbVendedores_Vend_Id");

            entity.ToTable("tbVendedores", "Vnta");

            entity.Property(e => e.Vend_Apellidos)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Vend_Codigo)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.Vend_Correo)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Vend_DNI)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Vend_DireccionExacta)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.Vend_EsExterno).HasDefaultValue(false);
            entity.Property(e => e.Vend_Estado).HasDefaultValue(true);
            entity.Property(e => e.Vend_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Vend_FechaModificacion).HasColumnType("datetime");
            entity.Property(e => e.Vend_Nombres)
                .IsRequired()
                .HasMaxLength(40)
                .IsUnicode(false);
            entity.Property(e => e.Vend_Sexo)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Vend_Telefono)
                .IsRequired()
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.Vend_Tipo)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();

            entity.HasOne(d => d.Colo).WithMany(p => p.tbVendedores)
                .HasForeignKey(d => d.Colo_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbVendedores_Gral_tbColonias_Colo_Id");

            entity.HasOne(d => d.Sucu).WithMany(p => p.tbVendedores)
                .HasForeignKey(d => d.Sucu_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbVendedores_Gral_tbSucursales_Sucu_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbVendedoresUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbVendedores_Acce_tbUsuarios_Usua_Creacion_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbVendedoresUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbVendedores_Acce_tbUsuarios_Usua_Modificacion_Usua_Id");

            entity.HasOne(d => d.Vend_AyudanteNavigation).WithMany(p => p.tbVendedoresVend_AyudanteNavigation)
                .HasForeignKey(d => d.Vend_Ayudante)
                .HasConstraintName("FK_Vnta_tbVendedores_Gral_tbEmpleados_Vend_Ayudante_Empl_Id");

            entity.HasOne(d => d.Vend_SupervisorNavigation).WithMany(p => p.tbVendedoresVend_SupervisorNavigation)
                .HasForeignKey(d => d.Vend_Supervisor)
                .HasConstraintName("FK_Vnta_tbVendedores_Gral_tbEmpleados_Vend_Supervisor_Empl_Id");
        });

        modelBuilder.Entity<tbVendedoresPorRuta>(entity =>
        {
            entity.HasKey(e => e.VeRu_Id).HasName("PK_Vnta_tbVendedoresPorRuta_VeRu_Id");

            entity.ToTable("tbVendedoresPorRuta", "Vnta");

            entity.Property(e => e.VeRu_Dia)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.Vend_Estado).HasDefaultValue(true);
            entity.Property(e => e.Vend_FechaCreacion).HasColumnType("datetime");
            entity.Property(e => e.Vend_FechaModificacion).HasColumnType("datetime");

            entity.HasOne(d => d.Ruta).WithMany(p => p.tbVendedoresPorRuta)
                .HasForeignKey(d => d.Ruta_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbVendedoresPorRuta_Logi_tbRutas_Ruta_Id");

            entity.HasOne(d => d.Usua_CreacionNavigation).WithMany(p => p.tbVendedoresPorRutaUsua_CreacionNavigation)
                .HasForeignKey(d => d.Usua_Creacion)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbVendedoresPorRuta_Usua_Creacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Usua_ModificacionNavigation).WithMany(p => p.tbVendedoresPorRutaUsua_ModificacionNavigation)
                .HasForeignKey(d => d.Usua_Modificacion)
                .HasConstraintName("FK_Vnta_tbVendedoresPorRuta_Usua_Modificacion_Acce_tbUsuarios_Usua_Id");

            entity.HasOne(d => d.Vend).WithMany(p => p.tbVendedoresPorRuta)
                .HasForeignKey(d => d.Vend_Id)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Vnta_tbVendedoresPorRuta_Vnta_tbVendedores_Vend_Id");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}